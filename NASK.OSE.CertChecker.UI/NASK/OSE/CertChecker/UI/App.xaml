<?xml version="1.0" encoding="utf-8"?>
<Application x:Class="NASK.OSE.CertChecker.UI.App" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:local="clr-namespace:NASK.OSE.CertChecker.UI" xmlns:System="clr-namespace:System;assembly=mscorlib">
  <Application.Resources>
    <ResourceDictionary>
      <local:BooleanToVisibilityConverter x:Key="BoolToVis" True="Visible" False="Collapsed" />
      <local:BooleanToVisibilityConverter x:Key="BoolToNegativeVis" True="Collapsed" False="Visible" />
      <Style x:Key="{x:Type Button}" TargetType="{x:Type Button}">
        <Setter Property="Visibility" Value="Collapsed" />
        <Style.Triggers>
          <DataTrigger Value="True" Binding="{Binding IsVisible}">
            <Setter Property="Visibility" Value="Visible" />
          </DataTrigger>
        </Style.Triggers>
      </Style>
      <FontFamily x:Key="RobotoCondensed">pack://application:,,,/Fonts/RobotoCondensed-Regular.ttf#Roboto Condensed</FontFamily>
      <FontFamily x:Key="RobotoCondensedBold">pack://application:,,,/Fonts/RobotoCondensed-Bold.ttf#Roboto Condensed</FontFamily>
      <SolidColorBrush x:Key="Dark" Color="#1D2636" />
      <SolidColorBrush x:Key="Light" Color="White" />
      <SolidColorBrush x:Key="Accent" Color="#00D1B5" />
      <SolidColorBrush x:Key="AccentHover" Color="#008577" />
      <SolidColorBrush x:Key="AccentPressed" Color="#00574B" />
      <SolidColorBrush x:Key="Safe" Color="#00B050" />
      <SolidColorBrush x:Key="Unsafe" Color="#E74410" />
      <System:Double x:Key="MainFontSize">25</System:Double>
      <System:Double x:Key="SmallFontSize">15</System:Double>
      <Style x:Key="Normal" TargetType="{x:Type Control}">
        <Setter Property="FontFamily" Value="{DynamicResource RobotoCondensed}" />
        <Setter Property="Foreground" Value="{DynamicResource Light}" />
        <Setter Property="FontSize" Value="{DynamicResource MainFontSize}" />
      </Style>
      <Style x:Key="NormalTB" TargetType="{x:Type TextBlock}">
        <Setter Property="FontFamily" Value="{DynamicResource RobotoCondensed}" />
        <Setter Property="Foreground" Value="{DynamicResource Light}" />
        <Setter Property="FontSize" Value="{DynamicResource MainFontSize}" />
      </Style>
      <Style x:Key="SafeAccent" TargetType="{x:Type Control}">
        <Setter Property="FontFamily" Value="{DynamicResource RobotoCondensedBold}" />
        <Setter Property="Foreground" Value="{DynamicResource Safe}" />
        <Setter Property="FontSize" Value="{DynamicResource MainFontSize}" />
      </Style>
      <Style x:Key="UnsafeAccent" TargetType="{x:Type Control}">
        <Setter Property="FontFamily" Value="{DynamicResource RobotoCondensedBold}" />
        <Setter Property="Foreground" Value="{DynamicResource Unsafe}" />
        <Setter Property="FontSize" Value="{DynamicResource MainFontSize}" />
      </Style>
      <Style x:Key="BNormal" TargetType="{x:Type Button}">
        <Setter Property="FontFamily" Value="{DynamicResource RobotoCondensed}" />
        <Setter Property="Foreground" Value="{DynamicResource Light}" />
        <Setter Property="Background" Value="{DynamicResource Accent}" />
        <Setter Property="FontSize" Value="{DynamicResource MainFontSize}" />
      </Style>
      <Style x:Key="BBad" TargetType="{x:Type Button}">
        <Setter Property="FontFamily" Value="{DynamicResource RobotoCondensed}" />
        <Setter Property="Foreground" Value="{DynamicResource Light}" />
        <Setter Property="Background" Value="#00FFFFFF" />
        <Setter Property="FontSize" Value="{DynamicResource MainFontSize}" />
      </Style>
      <Style x:Key="{x:Type Window}" TargetType="{x:Type Window}">
        <Setter Property="FontFamily" Value="{DynamicResource RobotoCondensed}" />
        <Setter Property="Foreground" Value="{DynamicResource Light}" />
        <Setter Property="FontSize" Value="{DynamicResource MainFontSize}" />
      </Style>
      <ControlTemplate x:Key="MainButton" TargetType="{x:Type ButtonBase}">
        <Border Name="border" BorderBrush="{DynamicResource Accent}" BorderThickness="{TemplateBinding Control.BorderThickness}" Background="{DynamicResource Accent}" SnapsToDevicePixels="True">
          <ContentPresenter Name="contentPresenter" ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" Content="{TemplateBinding ContentControl.Content}" ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" Margin="{TemplateBinding Control.Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" />
        </Border>
        <ControlTemplate.Triggers>
          <Trigger Property="Button.IsDefaulted" Value="True">
            <Setter TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Property="Border.BorderBrush" />
          </Trigger>
          <Trigger Property="UIElement.IsMouseOver" Value="True">
            <Setter TargetName="border" Value="{DynamicResource AccentHover}" Property="Border.Background" />
            <Setter TargetName="border" Value="{DynamicResource AccentHover}" Property="Border.BorderBrush" />
          </Trigger>
          <Trigger Property="ButtonBase.IsPressed" Value="True">
            <Setter TargetName="border" Value="{DynamicResource AccentPressed}" Property="Border.Background" />
            <Setter TargetName="border" Value="{DynamicResource AccentPressed}" Property="Border.BorderBrush" />
          </Trigger>
          <Trigger Property="ToggleButton.IsChecked" Value="True">
            <Setter TargetName="border" Property="Border.Background" Value="#FFBCDDEE" />
            <Setter TargetName="border" Property="Border.BorderBrush" Value="#FF245A83" />
          </Trigger>
          <Trigger Property="UIElement.IsEnabled" Value="False">
            <Setter TargetName="border" Property="Border.Background" Value="#FFF4F4F4" />
            <Setter TargetName="border" Property="Border.BorderBrush" Value="#FFADB2B5" />
            <Setter Property="Control.Foreground" Value="#FF838383" />
          </Trigger>
        </ControlTemplate.Triggers>
      </ControlTemplate>
      <ControlTemplate x:Key="BadButton" TargetType="{x:Type ButtonBase}">
        <Border Name="border" BorderBrush="{DynamicResource Accent}" BorderThickness="{TemplateBinding Control.BorderThickness}" Background="#00FFFFFF" SnapsToDevicePixels="True">
          <ContentPresenter Name="contentPresenter" ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" Content="{TemplateBinding ContentControl.Content}" ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" Margin="{TemplateBinding Control.Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" />
        </Border>
        <ControlTemplate.Triggers>
          <Trigger Property="Button.IsDefaulted" Value="True">
            <Setter TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Property="Border.BorderBrush" />
          </Trigger>
          <Trigger Property="UIElement.IsMouseOver" Value="True">
            <Setter TargetName="border" Value="{DynamicResource AccentPressed}" Property="Border.BorderBrush" />
          </Trigger>
          <Trigger Property="ButtonBase.IsPressed" Value="True">
            <Setter TargetName="border" Value="{DynamicResource AccentPressed}" Property="Border.Background" />
            <Setter TargetName="border" Value="{DynamicResource AccentPressed}" Property="Border.BorderBrush" />
          </Trigger>
          <Trigger Property="ToggleButton.IsChecked" Value="True">
            <Setter TargetName="border" Property="Border.Background" Value="#FFBCDDEE" />
            <Setter TargetName="border" Property="Border.BorderBrush" Value="#FF245A83" />
          </Trigger>
          <Trigger Property="UIElement.IsEnabled" Value="False">
            <Setter TargetName="border" Property="Border.Background" Value="#FFF4F4F4" />
            <Setter TargetName="border" Property="Border.BorderBrush" Value="#FFADB2B5" />
            <Setter Property="Control.Foreground" Value="#FF838383" />
          </Trigger>
        </ControlTemplate.Triggers>
      </ControlTemplate>
    </ResourceDictionary>
  </Application.Resources>
</Application>